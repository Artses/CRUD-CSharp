<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ruUmUkJKpZKZCu5SZSQkqlkpkq7lJlJqpKpZKZKu5SZSQkqlkpkq7lJlJCSqWSvMlXspMpISVoVPdyrX
        q1KlS7GF7yPrEFxPktnwOzKdJsWNA+J8SstlJlL2CttS4fUwOQ2bFSyUyVdykyl5C1SqWSmSruUmUkJK
        pZSZKu5SZSaqSsZi2WaT4fFau1bbtsRou9FrOGwrnEAAk9AFvotABKpdKOmo1o3df0UQCsYfCucbAE/n
        n0WbwewudQ/s/M/JZWnhw0WAAHcFk6qNiwoaNe7GpgN232HjjwWFw+ygNXa9w+avCiBoAruUmUtBk4lX
        FKlTpCGCFSyUyVdykyljC2yqWSmSruUmUkJKpZKZKu5SZSQkqlkpkq7lJlJCSr2UmUruUmUtkLFUspMp
        XcpMpIRUspMpXcpMpIRUspMpXcpMpIRUspMpXcpMpIRUspMpXcpMpIRUspMpXcpMpIRUspMpXcpMpIRU
        spMpXcpMpIRUspMpXcpMpIRUspMpXcpMpIRUspMpXcpMpIRYrG7PbVaGuJtcHTu5KTD4NjBFjQB8fE81
        kcpMpewsdUa2tGO/b3dypZSZSu5SZS8hZKllJlK7lJlJCKllJlK7lJlJCKllJlK7lJlJCKllJlK7lJlJ
        CKllJlK7lJlJCK/lJlIi2wsUykykRIRMpMpESETKTKREhEykykRIRMpMpESETKTKREhEykykRIRMpMpE
        SETKTKREhEykykRIRMpMpESETKTKREhEykykRIRMpMpESETKTKREhEykykRIRMpMpESETKTKREhF/9k=
</value>
  </data>
</root>